---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljc.
--- DateTime: 2020/6/30 0:50
---
--- 获取kafka连接，找到Topic，根据分区发送数据。
-- 数据采集脚本运行线程是有有限的，需要设置阈值，如果超过了阈值，就不进行生产和采集数据，线程等待
local DEFAULT_THRESHOLD = 1000
-- 获取KafkaBrokerList地址
local BROKERS_LIST ={
    {host="192.168.25.206",port=9092}
}
-- 获取分区数
local PARTITION_NUM = 3
-- 指定 主题
local TOPIC = "BIGDATA1903"

-- 指定kafka的配置参数
local CONNECT_PARAMS = {
    producer_type ="async",socket_timeout=30000,flush_time=10000,request_timeout=20000
}
-- 定义共享内存的Key
local POLLING_KEY ="POLLING_KEY"
-- 获取Nginx的共享内存
local shared_data = ngx.shared.shared_data
-- 去功能内存中获取我们设置的Key
local polling_val = shared_data:get(POLLING_KEY)
if not polling_val then
    polling_val = 1
    shared_data:set(POLLING_KEY,polling_val)
end
-- 计算消息生产到哪个分区
local partitionid = ''..tonumber(polling_val)%PARTITION_NUM
-- 再次将功能内存的Key的value值自增
shared_data:incr(POLLING_KEY,1)

-- 设置阈值变量
local isGone = true
-- 判断连接数是否超过阈值
if tonumber(ngx.var.connections_active) >tonumber(DEFAULT_THRESHOLD) then
    isGone =false
end
-- 低于条件的才可以生产到kafka中
if isGone then
    local time_local = ngx.var.time_local
    if time_local == nil then
        time_local = ""
    end
    local request = ngx.var.request
    if request == nil then
        request = ""
    end
    local request_method = ngx.var.request_method
    if request_method == nil then
        request_method = ""
    end
    local content_type = ngx.var.content_type
    if content_type == nil then
        content_type = ""
    end
    ngx.req.read_body()
    local request_body = ngx.var.request_body
    if request_body == nil then
        request_body = ""
    end
    local http_referer = ngx.var.http_referer
    if http_referer == nil then
        http_referer = ""
    end
    local remote_addr = ngx.var.remote_addr
    if remote_addr == nil then
        remote_addr = ""
    end
    local http_user_agent = ngx.var.http_user_agent
    if http_user_agent == nil then
        http_user_agent = ""
    end
    local time_iso8601 = ngx.var.time_iso8601
    if time_iso8601 == nil then
        time_iso8601 = ""
    end
    local server_addr = ngx.var.server_addr
    if server_addr == nil then
        server_addr = ""
    end
    local http_cookie = ngx.var.http_cookie
    if http_cookie == nil then
        http_cookie = ""
    end

    --封装数据
    local message = time_local .."#CS#".. request .."#CS#".. request_method .."#CS#".. content_type .."#CS#".. request_body .."#CS#".. http_referer .."#CS#".. remote_addr .."#CS#".. http_user_agent .."#CS#".. time_iso8601 .."#CS#".. server_addr .."#CS#".. http_cookie.."#CS#"..ngx.var.connections_active;
    -- 引入kafka的模块
    local producerMode = require "resty.kafka.producer"
    -- 创建生产者对象
    local producer = producerMode:new(BROKERS_LIST,CONNECT_PARAMS)
    -- 发送消息
    local ok,err = producer:send(TOPIC,partitionid,message)
    if not ok then
        ngx.log("Kafka send msg err: ",err)
    end
end

